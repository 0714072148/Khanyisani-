/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hospital_based_system;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Khanyisani
 */
public class NurseCC extends javax.swing.JFrame {
 String doctor_ID = "";
  Connection con=null;
ResultSet rs=null;
DefaultTableModel model;
PreparedStatement pst=null;

String Doctor_ID;
    /**
     * Creates new form NurseCC
     */
    public NurseCC() {
        initComponents();
        loadTable();
    }
  void loadTable(){
    //SELECT `id`, `DOCTOR_ID`, `PATIENT_ID`, `SYSPTOMS`, `DIAGNOSIS`, `MEDICATION`, `date` FROM `appointment` WHERE 1
        try {
            
                String f = doctor_ID;
        con=Connect.ConnectDB();
                                                                                                                                                                   
            pst = con.prepareStatement("SELECT * FROM appointment ");
            //pst.setString(1, f);
            rs = pst.executeQuery();

             model = (DefaultTableModel)jTable1.getModel();
             
            while(rs.next()){
                
                if( rs.getString(5).equals("") && rs.getString(6).equals("")){
                
                 Doctor_ID = rs.getString(2);   
                }else{
                    model.addRow(new Object[]{
                            rs.getString(1),
                            rs.getString(3),
                            rs.getString(5),
                            rs.getString(6),
                            rs.getString(7),
                            rs.getString(4)

                        });
                }
                
           //JOptionPane.showMessageDialog(this,"Auto Increment  :" + rs.getString(1));
           
           
           /*model.addRow(new Object[]{
            rs.getString(1),
            rs.getString(3),
            rs.getString(5),
            rs.getString(6),
            rs.getString(7),
            rs.getString(4)

        });*/
           
            }
            
           // jTable1.add(model);
            /*
            
                    pst = con.prepareStatement("SELECT `id`, `DOCTOR_ID`, `PATIENT_ID`, `SYSPTOMS`, `DIAGNOSIS`, `MEDICATION`, `date` FROM `appointment` WHERE DOCTOR_ID='"+doctor_ID+"' ");
                     rs = pst.executeQuery();
                     
                    // rs.getString(1);
                     String a ="";
                    while(rs.next())
                    { a =rs.getString(1);}
                    JOptionPane.showMessageDialog(this,"Auto Increment" +a);
         
                    JOptionPane.showMessageDialog(this,"success!"); */
                } catch (SQLException ex) {
                    Logger.getLogger(DoctorDash.class.getName()).log(Level.SEVERE, null, ex);
                }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        btnSearchP = new javax.swing.JButton();
        btnSearchP1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 0, 51));
        setForeground(new java.awt.Color(0, 204, 204));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Slot", "Patient_ID", "Diagnosis", "Medications", "Date", "Symptoms"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setFont(new java.awt.Font("Wide Latin", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 51));
        jLabel1.setText("Welcome Back Nurse");

        btnSearchP.setText("View Record");
        btnSearchP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchPActionPerformed(evt);
            }
        });

        btnSearchP1.setText("Update");
        btnSearchP1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchP1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 707, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(155, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnSearchP1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56)
                .addComponent(btnSearchP, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(172, 172, 172))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(64, 64, 64))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(69, 69, 69)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSearchP1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearchP, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(69, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSearchPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchPActionPerformed
        // TODO add your handling code here:
   
    }//GEN-LAST:event_btnSearchPActionPerformed

    private void btnSearchP1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchP1ActionPerformed

 con=Connect.ConnectDB();
      String id =jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString();
      String Patient_ID = jTable1.getValueAt(jTable1.getSelectedRow(), 1).toString();
      String Syptoms = jTable1.getValueAt(jTable1.getSelectedRow(), 5).toString();
      String Medication = jTable1.getValueAt(jTable1.getSelectedRow(), 3).toString();
      String Diagonis = jTable1.getValueAt(jTable1.getSelectedRow(), 2).toString();
      String Date = jTable1.getValueAt(jTable1.getSelectedRow(), 4).toString();

      //INSERT INTO `medical_history`(`id`, `DOCTOR_ID`, `PATIENT_ID`, `SYSPTOMS`, `DIAGNOSIS`, `MEDICATION`, `date`) VALUES ([value-1],[value-2],[value-3],[value-4],[value-5],[value-6],[value-7])

    
        try {
            pst = con.prepareStatement("INSERT INTO `medical_history`(`DOCTOR_ID`, `PATIENT_ID`, `SYSPTOMS`, `DIAGNOSIS`, `MEDICATION`, `date`) VALUES (?,?,?,?,?,?)");
            pst.setString(1,Doctor_ID);
            pst.setString(2,Patient_ID);
            pst.setString(3, Syptoms);
            pst.setString(4, Diagonis);
            pst.setString(5, Medication);
            pst.setString(6, Date);
            
           int result = pst.executeUpdate();
       
       if(result == 1){
       JOptionPane.showMessageDialog(this, "Successfull inserted into Medical History");
       
       pst = con.prepareStatement("DELETE FROM `appointment` WHERE id = '"+id+"'");
      int result1 = pst.executeUpdate();
       if(result1 == 1){
           JOptionPane.showMessageDialog(this, "Successfull Deleted");
       }
       else{
           JOptionPane.showMessageDialog(this, " Failed To Delete");
       }
       }
       else{
           JOptionPane.showMessageDialog(this, " Failed");
       }

        } catch (SQLException ex) {
            Logger.getLogger(NurseProfile.class.getName()).log(Level.SEVERE, null, ex);
        }

      
    }//GEN-LAST:event_btnSearchP1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NurseCC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NurseCC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NurseCC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NurseCC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NurseCC().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSearchP;
    private javax.swing.JButton btnSearchP1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
